

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Thu Nov 22 17:03:58 2018

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    25  0000                     
    26                           ; Version 1.44
    27                           ; Generated 14/09/2017 GMT
    28                           ; 
    29                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC18F46K22 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     
    61                           	psect	idataCOMRAM
    62  00F9EC                     __pidataCOMRAM:
    63                           	opt stack 0
    64                           
    65                           ;initializer for _cnt
    66  00F9EC  0001               	dw	1
    67                           
    68                           	psect	nvCOMRAM
    69  00005C                     __pnvCOMRAM:
    70                           	opt stack 0
    71  00005C                     _UQEnd:
    72                           	opt stack 0
    73  00005C                     	ds	1
    74  00005D                     _UQFront:
    75                           	opt stack 0
    76  00005D                     	ds	1
    77  0000                     _ANSELAbits	set	3896
    78  0000                     _CCPR3L	set	3934
    79  0000                     _CCP3CON	set	3933
    80  0000                     _CCPTMRS0	set	3913
    81  0000                     _ANSELE	set	3900
    82  0000                     _ANSELD	set	3899
    83  0000                     _ANSELC	set	3898
    84  0000                     _ANSELB	set	3897
    85  0000                     _ANSELA	set	3896
    86  0000                     _TXREG2	set	3955
    87  0000                     _PIR3bits	set	4004
    88  0000                     _PIE3bits	set	4003
    89  0000                     _RCSTA2bits	set	3953
    90  0000                     _TXSTA2bits	set	3954
    91  0000                     _SPBRG2	set	3957
    92  0000                     _SPBRGH2	set	3958
    93  0000                     _BAUDCON2bits	set	3952
    94  0000                     _TRISDbits	set	3989
    95  0000                     _RCREG	set	4014
    96  0000                     _PORTBbits	set	3969
    97  0000                     _TXREG	set	4013
    98  0000                     _PIR1bits	set	3998
    99  0000                     _RCSTA1bits	set	4011
   100  0000                     _TXSTA1bits	set	4012
   101  0000                     _SPBRG1	set	4015
   102  0000                     _PIE1bits	set	3997
   103  0000                     _INTCONbits	set	4082
   104  0000                     _TRISCbits	set	3988
   105  0000                     _ADCON2bits	set	4032
   106  0000                     _ADCON2	set	4032
   107  0000                     _ADCON1	set	4033
   108  0000                     _TRISAbits	set	3986
   109  0000                     _CCPR1L	set	4030
   110  0000                     _CCPR2L	set	3943
   111  0000                     _PR2	set	4027
   112  0000                     _T2CON	set	4026
   113  0000                     _CCP1CON	set	4029
   114  0000                     _CCP2CON	set	3942
   115  0000                     _OSCTUNEbits	set	3995
   116  0000                     _OSCCON	set	4051
   117  0000                     _LATE	set	3981
   118  0000                     _LATD	set	3980
   119  0000                     _LATC	set	3979
   120  0000                     _LATB	set	3978
   121  0000                     _LATA	set	3977
   122  0000                     _PORTE	set	3972
   123  0000                     _PORTD	set	3971
   124  0000                     _PORTC	set	3970
   125  0000                     _PORTB	set	3969
   126  0000                     _PORTA	set	3968
   127  0000                     _TRISE	set	3990
   128  0000                     _TRISD	set	3989
   129  0000                     _TRISC	set	3988
   130  0000                     _TRISB	set	3987
   131  0000                     _TRISA	set	3986
   132  0000                     _ADRESH	set	4036
   133  0000                     _ADCON0bits	set	4034
   134  0000                     _ADCON0	set	4034
   135  0000                     _LATDbits	set	3980
   136                           
   137                           ; #config settings
   138  0000                     
   139                           	psect	cinit
   140  00FA80                     __pcinit:
   141                           	opt stack 0
   142  00FA80                     start_initialization:
   143                           	opt stack 0
   144  00FA80                     __initialization:
   145                           	opt stack 0
   146                           
   147                           ; Initialize objects allocated to COMRAM (2 bytes)
   148                           ; load TBLPTR registers with __pidataCOMRAM
   149  00FA80  0EEC               	movlw	low __pidataCOMRAM
   150  00FA82  6EF6               	movwf	tblptrl,c
   151  00FA84  0EF9               	movlw	high __pidataCOMRAM
   152  00FA86  6EF7               	movwf	tblptrh,c
   153  00FA88  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   154  00FA8A  6EF8               	movwf	tblptru,c
   155  00FA8C  0009               	tblrd		*+	;fetch initializer
   156  00FA8E  CFF5 F05E          	movff	tablat,__pdataCOMRAM
   157  00FA92  0009               	tblrd		*+	;fetch initializer
   158  00FA94  CFF5 F05F          	movff	tablat,__pdataCOMRAM+1
   159                           
   160                           ; Clear objects allocated to BANK0 (102 bytes)
   161  00FA98  EE00  F060         	lfsr	0,__pbssBANK0
   162  00FA9C  0E66               	movlw	102
   163  00FA9E                     clear_0:
   164  00FA9E  6AEE               	clrf	postinc0,c
   165  00FAA0  06E8               	decf	wreg,f,c
   166  00FAA2  E1FD               	bnz	clear_0
   167                           
   168                           ; Clear objects allocated to COMRAM (36 bytes)
   169  00FAA4  EE00  F038         	lfsr	0,__pbssCOMRAM
   170  00FAA8  0E24               	movlw	36
   171  00FAAA                     clear_1:
   172  00FAAA  6AEE               	clrf	postinc0,c
   173  00FAAC  06E8               	decf	wreg,f,c
   174  00FAAE  E1FD               	bnz	clear_1
   175  00FAB0                     end_of_initialization:
   176                           	opt stack 0
   177  00FAB0                     __end_of__initialization:
   178                           	opt stack 0
   179  00FAB0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   180  00FAB2  6EF8               	movwf	tblptru,c
   181  00FAB4  0100               	movlb	0
   182  00FAB6  EF78  F07F         	goto	_main	;jump to C main() function
   183                           tblptru	equ	0xFF8
   184                           tblptrh	equ	0xFF7
   185                           tblptrl	equ	0xFF6
   186                           tablat	equ	0xFF5
   187                           postinc0	equ	0xFEE
   188                           wreg	equ	0xFE8
   189                           
   190                           	psect	bssCOMRAM
   191  000038                     __pbssCOMRAM:
   192                           	opt stack 0
   193  000038                     _adcn:
   194                           	opt stack 0
   195  000038                     	ds	2
   196  00003A                     _adcp:
   197                           	opt stack 0
   198  00003A                     	ds	2
   199  00003C                     _b:
   200                           	opt stack 0
   201  00003C                     	ds	2
   202  00003E                     _nt:
   203                           	opt stack 0
   204  00003E                     	ds	2
   205  000040                     _sel_pasi:
   206                           	opt stack 0
   207  000040                     	ds	2
   208  000042                     _pasi_int:
   209                           	opt stack 0
   210  000042                     	ds	2
   211  000044                     _start:
   212                           	opt stack 0
   213  000044                     	ds	2
   214  000046                     _go_stepper:
   215                           	opt stack 0
   216  000046                     	ds	2
   217  000048                     _directie_2:
   218                           	opt stack 0
   219  000048                     	ds	2
   220  00004A                     _nr_pasi:
   221                           	opt stack 0
   222  00004A                     	ds	2
   223  00004C                     _dir:
   224                           	opt stack 0
   225  00004C                     	ds	2
   226  00004E                     _pasi:
   227                           	opt stack 0
   228  00004E                     	ds	2
   229  000050                     _duty_buck:
   230                           	opt stack 0
   231  000050                     	ds	2
   232  000052                     _duty_boost:
   233                           	opt stack 0
   234  000052                     	ds	2
   235  000054                     _fac:
   236                           	opt stack 0
   237  000054                     	ds	2
   238  000056                     _d:
   239                           	opt stack 0
   240  000056                     	ds	2
   241  000058                     _c:
   242                           	opt stack 0
   243  000058                     	ds	2
   244  00005A                     _a:
   245                           	opt stack 0
   246  00005A                     	ds	2
   247                           tblptru	equ	0xFF8
   248                           tblptrh	equ	0xFF7
   249                           tblptrl	equ	0xFF6
   250                           tablat	equ	0xFF5
   251                           postinc0	equ	0xFEE
   252                           wreg	equ	0xFE8
   253                           
   254                           	psect	dataCOMRAM
   255  00005E                     __pdataCOMRAM:
   256                           	opt stack 0
   257  00005E                     _cnt:
   258                           	opt stack 0
   259  00005E                     	ds	2
   260                           tblptru	equ	0xFF8
   261                           tblptrh	equ	0xFF7
   262                           tblptrl	equ	0xFF6
   263                           tablat	equ	0xFF5
   264                           postinc0	equ	0xFEE
   265                           wreg	equ	0xFE8
   266                           
   267                           	psect	bssBANK0
   268  000060                     __pbssBANK0:
   269                           	opt stack 0
   270  000060                     _URBuff:
   271                           	opt stack 0
   272  000060                     	ds	64
   273  0000A0                     _str:
   274                           	opt stack 0
   275  0000A0                     	ds	20
   276  0000B4                     USART2WriteInt@F7045:
   277                           	opt stack 0
   278  0000B4                     	ds	5
   279  0000B9                     USARTWriteInt@F7033:
   280                           	opt stack 0
   281  0000B9                     	ds	5
   282  0000BE                     _boost:
   283                           	opt stack 0
   284  0000BE                     	ds	2
   285  0000C0                     _buck:
   286                           	opt stack 0
   287  0000C0                     	ds	2
   288  0000C2                     _dty:
   289                           	opt stack 0
   290  0000C2                     	ds	2
   291  0000C4                     _type:
   292                           	opt stack 0
   293  0000C4                     	ds	2
   294                           tblptru	equ	0xFF8
   295                           tblptrh	equ	0xFF7
   296                           tblptrl	equ	0xFF6
   297                           tablat	equ	0xFF5
   298                           postinc0	equ	0xFEE
   299                           wreg	equ	0xFE8
   300                           
   301                           	psect	cstackCOMRAM
   302  000001                     __pcstackCOMRAM:
   303                           	opt stack 0
   304  000001                     ?___ftpack:
   305                           	opt stack 0
   306  000001                     USARTInit@baud_rate:
   307                           	opt stack 0
   308  000001                     ___ftpack@arg:
   309                           	opt stack 0
   310                           
   311                           ; 3 bytes @ 0x0
   312  000001                     	ds	2
   313  000003                     ??_USARTInit:
   314                           
   315                           ; 1 bytes @ 0x2
   316  000003                     	ds	1
   317  000004                     ___ftpack@exp:
   318                           	opt stack 0
   319                           
   320                           ; 1 bytes @ 0x3
   321  000004                     	ds	1
   322  000005                     ___ftpack@sign:
   323                           	opt stack 0
   324                           
   325                           ; 1 bytes @ 0x4
   326  000005                     	ds	1
   327  000006                     ??___ftpack:
   328                           
   329                           ; 1 bytes @ 0x5
   330  000006                     	ds	3
   331  000009                     ?___awtoft:
   332                           	opt stack 0
   333  000009                     ___awtoft@c:
   334                           	opt stack 0
   335                           
   336                           ; 2 bytes @ 0x8
   337  000009                     	ds	3
   338  00000C                     ___awtoft@sign:
   339                           	opt stack 0
   340                           
   341                           ; 1 bytes @ 0xB
   342  00000C                     	ds	1
   343  00000D                     ?___ftmul:
   344                           	opt stack 0
   345  00000D                     ___ftmul@f1:
   346                           	opt stack 0
   347                           
   348                           ; 3 bytes @ 0xC
   349  00000D                     	ds	3
   350  000010                     ___ftmul@f2:
   351                           	opt stack 0
   352                           
   353                           ; 3 bytes @ 0xF
   354  000010                     	ds	3
   355  000013                     ??___ftmul:
   356                           
   357                           ; 1 bytes @ 0x12
   358  000013                     	ds	3
   359  000016                     ___ftmul@exp:
   360                           	opt stack 0
   361                           
   362                           ; 1 bytes @ 0x15
   363  000016                     	ds	1
   364  000017                     ___ftmul@f3_as_product:
   365                           	opt stack 0
   366                           
   367                           ; 3 bytes @ 0x16
   368  000017                     	ds	3
   369  00001A                     ___ftmul@cntr:
   370                           	opt stack 0
   371                           
   372                           ; 1 bytes @ 0x19
   373  00001A                     	ds	1
   374  00001B                     ___ftmul@sign:
   375                           	opt stack 0
   376                           
   377                           ; 1 bytes @ 0x1A
   378  00001B                     	ds	1
   379  00001C                     ?___fttol:
   380                           	opt stack 0
   381  00001C                     ___fttol@f1:
   382                           	opt stack 0
   383                           
   384                           ; 3 bytes @ 0x1B
   385  00001C                     	ds	4
   386  000020                     ??___fttol:
   387                           
   388                           ; 1 bytes @ 0x1F
   389  000020                     	ds	5
   390  000025                     ___fttol@sign1:
   391                           	opt stack 0
   392                           
   393                           ; 1 bytes @ 0x24
   394  000025                     	ds	1
   395  000026                     ___fttol@lval:
   396                           	opt stack 0
   397                           
   398                           ; 4 bytes @ 0x25
   399  000026                     	ds	4
   400  00002A                     ___fttol@exp1:
   401                           	opt stack 0
   402                           
   403                           ; 1 bytes @ 0x29
   404  00002A                     	ds	1
   405  00002B                     buck_boost@type:
   406                           	opt stack 0
   407                           
   408                           ; 2 bytes @ 0x2A
   409  00002B                     	ds	2
   410  00002D                     buck_boost@dty:
   411                           	opt stack 0
   412                           
   413                           ; 2 bytes @ 0x2C
   414  00002D                     	ds	2
   415  00002F                     ??_main:
   416                           
   417                           ; 1 bytes @ 0x2E
   418  00002F                     	ds	2
   419  000031                     main@numar:
   420                           	opt stack 0
   421                           
   422                           ; 3 bytes @ 0x30
   423  000031                     	ds	3
   424  000034                     main@dty:
   425                           	opt stack 0
   426                           
   427                           ; 2 bytes @ 0x33
   428  000034                     	ds	2
   429  000036                     main@rez_adc:
   430                           	opt stack 0
   431                           
   432                           ; 2 bytes @ 0x35
   433  000036                     	ds	2
   434                           tblptru	equ	0xFF8
   435                           tblptrh	equ	0xFF7
   436                           tblptrl	equ	0xFF6
   437                           tablat	equ	0xFF5
   438                           postinc0	equ	0xFEE
   439                           wreg	equ	0xFE8
   440                           
   441 ;;
   442 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   443 ;;
   444 ;; *************** function _main *****************
   445 ;; Defined at:
   446 ;;		line 22 in file "main.c"
   447 ;; Parameters:    Size  Location     Type
   448 ;;		None
   449 ;; Auto vars:     Size  Location     Type
   450 ;;  pwm_buffer     20    0        unsigned char [20]
   451 ;;  numar           3   48[COMRAM] float 
   452 ;;  rez_adc         2   53[COMRAM] int 
   453 ;;  dty             2   51[COMRAM] int 
   454 ;; Return value:  Size  Location     Type
   455 ;;                  1    wreg      void 
   456 ;; Registers used:
   457 ;;		wreg, status,2, status,0, cstack
   458 ;; Tracked objects:
   459 ;;		On entry : 0/0
   460 ;;		On exit  : 0/0
   461 ;;		Unchanged: 0/0
   462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   464 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   465 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   466 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   467 ;;Total ram usage:        9 bytes
   468 ;; Hardware stack levels required when called:    3
   469 ;; This function calls:
   470 ;;		___awtoft
   471 ;;		___ftmul
   472 ;;		___fttol
   473 ;;		_adc_config
   474 ;;		_buck_boost
   475 ;;		_config
   476 ;;		_eusart_config
   477 ;;		_pwm_config
   478 ;; This function is called by:
   479 ;;		Startup code after reset
   480 ;; This function uses a non-reentrant model
   481 ;;
   482                           
   483                           	psect	text0
   484  00FEF0                     __ptext0:
   485                           	opt stack 0
   486  00FEF0                     _main:
   487                           	opt stack 28
   488                           
   489                           ;main.c: 24: dir=0;
   490                           
   491                           ;incstack = 0
   492  00FEF0  0E00               	movlw	0
   493  00FEF2  6E4D               	movwf	_dir+1,c
   494  00FEF4  0E00               	movlw	0
   495  00FEF6  6E4C               	movwf	_dir,c
   496                           
   497                           ;main.c: 25: nt=0;
   498  00FEF8  0E00               	movlw	0
   499  00FEFA  6E3F               	movwf	_nt+1,c
   500  00FEFC  0E00               	movlw	0
   501  00FEFE  6E3E               	movwf	_nt,c
   502                           
   503                           ;main.c: 26: nr_pasi=0;
   504  00FF00  0E00               	movlw	0
   505  00FF02  6E4B               	movwf	_nr_pasi+1,c
   506  00FF04  0E00               	movlw	0
   507  00FF06  6E4A               	movwf	_nr_pasi,c
   508                           
   509                           ;main.c: 27: go_stepper=0;
   510  00FF08  0E00               	movlw	0
   511  00FF0A  6E47               	movwf	_go_stepper+1,c
   512  00FF0C  0E00               	movlw	0
   513  00FF0E  6E46               	movwf	_go_stepper,c
   514                           
   515                           ;main.c: 28: start=0;
   516  00FF10  0E00               	movlw	0
   517  00FF12  6E45               	movwf	_start+1,c
   518  00FF14  0E00               	movlw	0
   519  00FF16  6E44               	movwf	_start,c
   520                           
   521                           ;main.c: 29: sel_pasi=0;
   522  00FF18  0E00               	movlw	0
   523  00FF1A  6E41               	movwf	_sel_pasi+1,c
   524  00FF1C  0E00               	movlw	0
   525  00FF1E  6E40               	movwf	_sel_pasi,c
   526                           
   527                           ;main.c: 30: char pwm_buffer[20];
   528                           ;main.c: 31: config();
   529  00FF20  EC5D  F07D         	call	_config	;wreg free
   530                           
   531                           ;main.c: 32: pwm_config();
   532  00FF24  EC10  F07D         	call	_pwm_config	;wreg free
   533                           
   534                           ;main.c: 33: adc_config();
   535  00FF28  EC03  F07D         	call	_adc_config	;wreg free
   536                           
   537                           ;main.c: 34: eusart_config();
   538  00FF2C  ECF7  F07C         	call	_eusart_config	;wreg free
   539                           
   540                           ;main.c: 36: int dty,rez_adc;
   541                           ;main.c: 37: float numar;
   542                           ;main.c: 38: dty=0;
   543  00FF30  0E00               	movlw	0
   544  00FF32  6E35               	movwf	main@dty+1,c
   545  00FF34  0E00               	movlw	0
   546  00FF36  6E34               	movwf	main@dty,c
   547                           
   548                           ;main.c: 39: LATDbits.LD6=0;
   549  00FF38  9C8C               	bcf	3980,6,c	;volatile
   550                           
   551                           ;main.c: 40: LATDbits.LD7=0;
   552  00FF3A  9E8C               	bcf	3980,7,c	;volatile
   553                           
   554                           ;main.c: 41: LATDbits.LD5=0;
   555  00FF3C  9A8C               	bcf	3980,5,c	;volatile
   556                           
   557                           ;main.c: 42: LATDbits.LD4=0;
   558  00FF3E  988C               	bcf	3980,4,c	;volatile
   559                           
   560                           ;main.c: 45: ADCON0=0b00000011;
   561  00FF40  0E03               	movlw	3
   562  00FF42  6EC2               	movwf	4034,c	;volatile
   563  00FF44                     
   564                           ;main.c: 53: {
   565                           ;main.c: 54: ADCON0=0b00000011;
   566  00FF44  0E03               	movlw	3
   567  00FF46  6EC2               	movwf	4034,c	;volatile
   568                           
   569                           ;main.c: 55: _delay((unsigned long)((10)*(64000000/4000.0)));
   570  00FF48  0ED0               	movlw	208
   571  00FF4A  6E2F               	movwf	??_main& (0+255),c
   572  00FF4C  0ECA               	movlw	202
   573  00FF4E                     u1417:
   574  00FF4E  2EE8               	decfsz	wreg,f,c
   575  00FF50  D7FE               	bra	u1417
   576  00FF52  2E2F               	decfsz	??_main& (0+255),f,c
   577  00FF54  D7FC               	bra	u1417
   578                           
   579                           ;main.c: 56: ADCON0bits.GO=1;
   580  00FF56  82C2               	bsf	4034,1,c	;volatile
   581                           
   582                           ;main.c: 57: _delay((unsigned long)((100)*(64000000/4000.0)));
   583  00FF58  0E09               	movlw	9
   584  00FF5A  6E30               	movwf	(??_main+1)& (0+255),c
   585  00FF5C  0E1E               	movlw	30
   586  00FF5E  6E2F               	movwf	??_main& (0+255),c
   587  00FF60  0EE4               	movlw	228
   588  00FF62                     u1427:
   589  00FF62  2EE8               	decfsz	wreg,f,c
   590  00FF64  D7FE               	bra	u1427
   591  00FF66  2E2F               	decfsz	??_main& (0+255),f,c
   592  00FF68  D7FC               	bra	u1427
   593  00FF6A  2E30               	decfsz	(??_main+1)& (0+255),f,c
   594  00FF6C  D7FA               	bra	u1427
   595  00FF6E  D000               	nop2	
   596                           
   597                           ;main.c: 60: rez_adc=ADRESH;
   598  00FF70  CFC4 F036          	movff	4036,main@rez_adc	;volatile
   599  00FF74  6A37               	clrf	main@rez_adc+1,c
   600                           
   601                           ;main.c: 61: numar=rez_adc*0.0182;
   602  00FF76  C036  F009         	movff	main@rez_adc,___awtoft@c
   603  00FF7A  C037  F00A         	movff	main@rez_adc+1,___awtoft@c+1
   604  00FF7E  EC24  F07D         	call	___awtoft	;wreg free
   605  00FF82  C009  F00D         	movff	?___awtoft,___ftmul@f1
   606  00FF86  C00A  F00E         	movff	?___awtoft+1,___ftmul@f1+1
   607  00FF8A  C00B  F00F         	movff	?___awtoft+2,___ftmul@f1+2
   608  00FF8E  0E18               	movlw	24
   609  00FF90  6E10               	movwf	___ftmul@f2,c
   610  00FF92  0E95               	movlw	149
   611  00FF94  6E11               	movwf	___ftmul@f2+1,c
   612  00FF96  0E3C               	movlw	60
   613  00FF98  6E12               	movwf	___ftmul@f2+2,c
   614  00FF9A  EC84  F07E         	call	___ftmul	;wreg free
   615  00FF9E  C00D  F031         	movff	?___ftmul,main@numar
   616  00FFA2  C00E  F032         	movff	?___ftmul+1,main@numar+1
   617  00FFA6  C00F  F033         	movff	?___ftmul+2,main@numar+2
   618                           
   619                           ;main.c: 62: dty=rez_adc*0.39;
   620  00FFAA  0EAE               	movlw	174
   621  00FFAC  6E10               	movwf	___ftmul@f2,c
   622  00FFAE  0EC7               	movlw	199
   623  00FFB0  6E11               	movwf	___ftmul@f2+1,c
   624  00FFB2  0E3E               	movlw	62
   625  00FFB4  6E12               	movwf	___ftmul@f2+2,c
   626  00FFB6  C036  F009         	movff	main@rez_adc,___awtoft@c
   627  00FFBA  C037  F00A         	movff	main@rez_adc+1,___awtoft@c+1
   628  00FFBE  EC24  F07D         	call	___awtoft	;wreg free
   629  00FFC2  C009  F00D         	movff	?___awtoft,___ftmul@f1
   630  00FFC6  C00A  F00E         	movff	?___awtoft+1,___ftmul@f1+1
   631  00FFCA  C00B  F00F         	movff	?___awtoft+2,___ftmul@f1+2
   632  00FFCE  EC84  F07E         	call	___ftmul	;wreg free
   633  00FFD2  C00D  F01C         	movff	?___ftmul,___fttol@f1
   634  00FFD6  C00E  F01D         	movff	?___ftmul+1,___fttol@f1+1
   635  00FFDA  C00F  F01E         	movff	?___ftmul+2,___fttol@f1+2
   636  00FFDE  ECFE  F07E         	call	___fttol	;wreg free
   637  00FFE2  C01C  F034         	movff	?___fttol,main@dty
   638  00FFE6  C01D  F035         	movff	?___fttol+1,main@dty+1
   639                           
   640                           ;main.c: 64: buck_boost (2, dty );
   641  00FFEA  0E00               	movlw	0
   642  00FFEC  6E2C               	movwf	buck_boost@type+1,c
   643  00FFEE  0E02               	movlw	2
   644  00FFF0  6E2B               	movwf	buck_boost@type,c
   645  00FFF2  C034  F02D         	movff	main@dty,buck_boost@dty
   646  00FFF6  C035  F02E         	movff	main@dty+1,buck_boost@dty+1
   647  00FFFA  EC1B  F07E         	call	_buck_boost	;wreg free
   648  00FFFE  D7A2               	goto	l63
   649  010000                     __end_of_main:
   650                           	opt stack 0
   651                           tblptru	equ	0xFF8
   652                           tblptrh	equ	0xFF7
   653                           tblptrl	equ	0xFF6
   654                           tablat	equ	0xFF5
   655                           postinc0	equ	0xFEE
   656                           wreg	equ	0xFE8
   657                           
   658 ;; *************** function _pwm_config *****************
   659 ;; Defined at:
   660 ;;		line 43 in file "config.c"
   661 ;; Parameters:    Size  Location     Type
   662 ;;		None
   663 ;; Auto vars:     Size  Location     Type
   664 ;;		None
   665 ;; Return value:  Size  Location     Type
   666 ;;                  1    wreg      void 
   667 ;; Registers used:
   668 ;;		wreg, status,2
   669 ;; Tracked objects:
   670 ;;		On entry : 0/0
   671 ;;		On exit  : 0/0
   672 ;;		Unchanged: 0/0
   673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   678 ;;Total ram usage:        0 bytes
   679 ;; Hardware stack levels used:    1
   680 ;; This function calls:
   681 ;;		Nothing
   682 ;; This function is called by:
   683 ;;		_main
   684 ;; This function uses a non-reentrant model
   685 ;;
   686                           
   687                           	psect	text1
   688  00FA20                     __ptext1:
   689                           	opt stack 0
   690  00FA20                     _pwm_config:
   691                           	opt stack 30
   692                           
   693                           ;config.c: 45: CCPTMRS0=0b00000000;
   694                           
   695                           ;incstack = 0
   696  00FA20  0E00               	movlw	0
   697  00FA22  010F               	movlb	15	; () banked
   698  00FA24  6F49               	movwf	73,b	;volatile
   699                           
   700                           ;config.c: 46: CCP2CON=0b00001100;
   701  00FA26  0E0C               	movlw	12
   702  00FA28  6E66               	movwf	3942,c	;volatile
   703                           
   704                           ;config.c: 47: CCP1CON=0b00001100;
   705  00FA2A  0E0C               	movlw	12
   706  00FA2C  6EBD               	movwf	4029,c	;volatile
   707                           
   708                           ;config.c: 48: T2CON=0b01111101;
   709  00FA2E  0E7D               	movlw	125
   710  00FA30  6EBA               	movwf	4026,c	;volatile
   711                           
   712                           ;config.c: 49: PR2=160;
   713  00FA32  0EA0               	movlw	160
   714  00FA34  6EBB               	movwf	4027,c	;volatile
   715                           
   716                           ;config.c: 51: CCPR2L=128;
   717  00FA36  0E80               	movlw	128
   718  00FA38  6E67               	movwf	3943,c	;volatile
   719                           
   720                           ;config.c: 52: CCPR1L=64;
   721  00FA3A  0E40               	movlw	64
   722  00FA3C  6EBE               	movwf	4030,c	;volatile
   723                           
   724                           ;config.c: 53: CCP3CON=0b00001100;
   725  00FA3E  0E0C               	movlw	12
   726  00FA40  6F5D               	movwf	93,b	;volatile
   727                           
   728                           ;config.c: 54: CCPR3L=128;
   729  00FA42  0E80               	movlw	128
   730  00FA44  6F5E               	movwf	94,b	;volatile
   731                           
   732                           ; BSR set to: 15
   733  00FA46  0012               	return		;funcret
   734  00FA48                     __end_of_pwm_config:
   735                           	opt stack 0
   736                           tblptru	equ	0xFF8
   737                           tblptrh	equ	0xFF7
   738                           tblptrl	equ	0xFF6
   739                           tablat	equ	0xFF5
   740                           postinc0	equ	0xFEE
   741                           wreg	equ	0xFE8
   742                           
   743 ;; *************** function _eusart_config *****************
   744 ;; Defined at:
   745 ;;		line 73 in file "config.c"
   746 ;; Parameters:    Size  Location     Type
   747 ;;		None
   748 ;; Auto vars:     Size  Location     Type
   749 ;;		None
   750 ;; Return value:  Size  Location     Type
   751 ;;                  1    wreg      void 
   752 ;; Registers used:
   753 ;;		wreg, status,2, status,0, cstack
   754 ;; Tracked objects:
   755 ;;		On entry : 0/0
   756 ;;		On exit  : 0/0
   757 ;;		Unchanged: 0/0
   758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   763 ;;Total ram usage:        0 bytes
   764 ;; Hardware stack levels used:    1
   765 ;; Hardware stack levels required when called:    1
   766 ;; This function calls:
   767 ;;		_USARTInit
   768 ;; This function is called by:
   769 ;;		_main
   770 ;; This function uses a non-reentrant model
   771 ;;
   772                           
   773                           	psect	text2
   774  00F9EE                     __ptext2:
   775                           	opt stack 0
   776  00F9EE                     _eusart_config:
   777                           	opt stack 29
   778                           
   779                           ;config.c: 75: TRISCbits.RC6=1;
   780                           
   781                           ; BSR set to: 15
   782                           ;incstack = 0
   783  00F9EE  8C94               	bsf	3988,6,c	;volatile
   784                           
   785                           ;config.c: 76: USARTInit(19200);
   786  00F9F0  0E4B               	movlw	75
   787  00F9F2  6E02               	movwf	USARTInit@baud_rate+1,c
   788  00F9F4  0E00               	movlw	0
   789  00F9F6  6E01               	movwf	USARTInit@baud_rate,c
   790  00F9F8  EC89  F07D         	call	_USARTInit	;wreg free
   791                           
   792                           ;config.c: 77: TRISCbits.RC7=1;
   793  00F9FC  8E94               	bsf	3988,7,c	;volatile
   794                           
   795                           ;config.c: 78: INTCONbits.GIE=1;
   796  00F9FE  8EF2               	bsf	intcon,7,c	;volatile
   797                           
   798                           ;config.c: 79: INTCONbits.PEIE=1;
   799  00FA00  8CF2               	bsf	intcon,6,c	;volatile
   800                           
   801                           ;config.c: 80: PIE1bits.RC1IE=1;
   802  00FA02  8A9D               	bsf	3997,5,c	;volatile
   803  00FA04  0012               	return		;funcret
   804  00FA06                     __end_of_eusart_config:
   805                           	opt stack 0
   806                           tblptru	equ	0xFF8
   807                           tblptrh	equ	0xFF7
   808                           tblptrl	equ	0xFF6
   809                           tablat	equ	0xFF5
   810                           intcon	equ	0xFF2
   811                           postinc0	equ	0xFEE
   812                           wreg	equ	0xFE8
   813                           
   814 ;; *************** function _USARTInit *****************
   815 ;; Defined at:
   816 ;;		line 31 in file "usart_pic16.c"
   817 ;; Parameters:    Size  Location     Type
   818 ;;  baud_rate       2    0[COMRAM] unsigned int 
   819 ;; Auto vars:     Size  Location     Type
   820 ;;		None
   821 ;; Return value:  Size  Location     Type
   822 ;;                  1    wreg      void 
   823 ;; Registers used:
   824 ;;		wreg, status,2, status,0
   825 ;; Tracked objects:
   826 ;;		On entry : 0/0
   827 ;;		On exit  : 0/0
   828 ;;		Unchanged: 0/0
   829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   830 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   832 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   833 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   834 ;;Total ram usage:        4 bytes
   835 ;; Hardware stack levels used:    1
   836 ;; This function calls:
   837 ;;		Nothing
   838 ;; This function is called by:
   839 ;;		_eusart_config
   840 ;; This function uses a non-reentrant model
   841 ;;
   842                           
   843                           	psect	text3
   844  00FB12                     __ptext3:
   845                           	opt stack 0
   846  00FB12                     _USARTInit:
   847                           	opt stack 29
   848                           
   849                           ;usart_pic16.c: 34: UQFront=UQEnd=-1;
   850                           
   851                           ;incstack = 0
   852  00FB12  685C               	setf	_UQEnd,c	;volatile
   853  00FB14  685D               	setf	_UQFront,c	;volatile
   854                           
   855                           ;usart_pic16.c: 37: switch(baud_rate)
   856  00FB16  D009               	goto	l238
   857  00FB18                     
   858                           ;usart_pic16.c: 40: SPBRG1=207;
   859  00FB18  0ECF               	movlw	207
   860  00FB1A  D005               	goto	L3
   861  00FB1C                     
   862                           ;usart_pic16.c: 43: SPBRG1=51;
   863  00FB1C  0E33               	movlw	51
   864  00FB1E  D003               	goto	L3
   865  00FB20                     
   866                           ;usart_pic16.c: 46: SPBRG1=42;
   867  00FB20  0E2A               	movlw	42
   868  00FB22  D001               	goto	L3
   869  00FB24                     
   870                           ;usart_pic16.c: 49: SPBRG1=36;
   871  00FB24  0E24               	movlw	36
   872  00FB26                     L3:
   873  00FB26  6EAF               	movwf	4015,c	;volatile
   874                           
   875                           ;usart_pic16.c: 51: }
   876                           
   877                           ;usart_pic16.c: 50: break;
   878  00FB28  D025               	goto	l240
   879  00FB2A                     l238:
   880  00FB2A  C001  F003         	movff	USARTInit@baud_rate,??_USARTInit
   881  00FB2E  C002  F004         	movff	USARTInit@baud_rate+1,??_USARTInit+1
   882                           
   883                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 4 sub-sw
      +                          itches
   884                           ; Switch size 1, requested type "space"
   885                           ; Number of cases is 4, Range of values is 37 to 131
   886                           ; switch strategies available:
   887                           ; Name         Instructions Cycles
   888                           ; simple_byte           13     7 (average)
   889                           ;	Chosen strategy is simple_byte
   890  00FB32  5004               	movf	??_USARTInit+1,w,c
   891  00FB34  0A25               	xorlw	37	; case 37
   892  00FB36  B4D8               	btfsc	status,2,c
   893  00FB38  D00A               	goto	l2263
   894  00FB3A  0A6E               	xorlw	110	; case 75
   895  00FB3C  B4D8               	btfsc	status,2,c
   896  00FB3E  D00C               	goto	l2265
   897  00FB40  0A3B               	xorlw	59	; case 112
   898  00FB42  B4D8               	btfsc	status,2,c
   899  00FB44  D00E               	goto	l2267
   900  00FB46  0AF3               	xorlw	243	; case 131
   901  00FB48  B4D8               	btfsc	status,2,c
   902  00FB4A  D010               	goto	l2269
   903  00FB4C  D013               	goto	l240
   904  00FB4E                     l2263:
   905                           
   906                           ; Switch size 1, requested type "space"
   907                           ; Number of cases is 1, Range of values is 128 to 128
   908                           ; switch strategies available:
   909                           ; Name         Instructions Cycles
   910                           ; simple_byte            4     3 (average)
   911                           ;	Chosen strategy is simple_byte
   912  00FB4E  5003               	movf	??_USARTInit,w,c
   913  00FB50  0A80               	xorlw	128	; case 128
   914  00FB52  B4D8               	btfsc	status,2,c
   915  00FB54  D7E1               	goto	l239
   916  00FB56  D00E               	goto	l240
   917  00FB58                     l2265:
   918                           
   919                           ; Switch size 1, requested type "space"
   920                           ; Number of cases is 1, Range of values is 0 to 0
   921                           ; switch strategies available:
   922                           ; Name         Instructions Cycles
   923                           ; simple_byte            4     3 (average)
   924                           ;	Chosen strategy is simple_byte
   925  00FB58  5003               	movf	??_USARTInit,w,c
   926  00FB5A  0A00               	xorlw	0	; case 0
   927  00FB5C  B4D8               	btfsc	status,2,c
   928  00FB5E  D7DE               	goto	l241
   929  00FB60  D009               	goto	l240
   930  00FB62                     l2267:
   931                           
   932                           ; Switch size 1, requested type "space"
   933                           ; Number of cases is 1, Range of values is 128 to 128
   934                           ; switch strategies available:
   935                           ; Name         Instructions Cycles
   936                           ; simple_byte            4     3 (average)
   937                           ;	Chosen strategy is simple_byte
   938  00FB62  5003               	movf	??_USARTInit,w,c
   939  00FB64  0A80               	xorlw	128	; case 128
   940  00FB66  B4D8               	btfsc	status,2,c
   941  00FB68  D7DB               	goto	l242
   942  00FB6A  D004               	goto	l240
   943  00FB6C                     l2269:
   944                           
   945                           ; Switch size 1, requested type "space"
   946                           ; Number of cases is 1, Range of values is 64 to 64
   947                           ; switch strategies available:
   948                           ; Name         Instructions Cycles
   949                           ; simple_byte            4     3 (average)
   950                           ;	Chosen strategy is simple_byte
   951  00FB6C  5003               	movf	??_USARTInit,w,c
   952  00FB6E  0A40               	xorlw	64	; case 64
   953  00FB70  B4D8               	btfsc	status,2,c
   954  00FB72  D7D8               	goto	l243
   955  00FB74                     l240:
   956                           
   957                           ;usart_pic16.c: 53: TXSTA1bits.TX9=0;
   958  00FB74  9CAC               	bcf	4012,6,c	;volatile
   959                           
   960                           ;usart_pic16.c: 54: TXSTA1bits.TXEN=1;
   961  00FB76  8AAC               	bsf	4012,5,c	;volatile
   962                           
   963                           ;usart_pic16.c: 55: TXSTA1bits.SYNC=0;
   964  00FB78  98AC               	bcf	4012,4,c	;volatile
   965                           
   966                           ;usart_pic16.c: 56: TXSTA1bits.BRGH=0;
   967  00FB7A  94AC               	bcf	4012,2,c	;volatile
   968                           
   969                           ;usart_pic16.c: 65: RCSTA1bits.SPEN=1;
   970  00FB7C  8EAB               	bsf	4011,7,c	;volatile
   971                           
   972                           ;usart_pic16.c: 66: RCSTA1bits.RX9=0;
   973  00FB7E  9CAB               	bcf	4011,6,c	;volatile
   974                           
   975                           ;usart_pic16.c: 67: RCSTA1bits.CREN=1;
   976  00FB80  88AB               	bsf	4011,4,c	;volatile
   977                           
   978                           ;usart_pic16.c: 68: RCSTA1bits.ADDEN=0;
   979  00FB82  96AB               	bcf	4011,3,c	;volatile
   980                           
   981                           ;usart_pic16.c: 75: (INTCONbits.GIE = 1);
   982  00FB84  8EF2               	bsf	intcon,7,c	;volatile
   983  00FB86  0012               	return		;funcret
   984  00FB88                     __end_of_USARTInit:
   985                           	opt stack 0
   986                           tblptru	equ	0xFF8
   987                           tblptrh	equ	0xFF7
   988                           tblptrl	equ	0xFF6
   989                           tablat	equ	0xFF5
   990                           intcon	equ	0xFF2
   991                           postinc0	equ	0xFEE
   992                           wreg	equ	0xFE8
   993                           status	equ	0xFD8
   994                           
   995 ;; *************** function _config *****************
   996 ;; Defined at:
   997 ;;		line 4 in file "config.c"
   998 ;; Parameters:    Size  Location     Type
   999 ;;		None
  1000 ;; Auto vars:     Size  Location     Type
  1001 ;;		None
  1002 ;; Return value:  Size  Location     Type
  1003 ;;                  1    wreg      void 
  1004 ;; Registers used:
  1005 ;;		wreg, status,2
  1006 ;; Tracked objects:
  1007 ;;		On entry : 0/0
  1008 ;;		On exit  : 0/0
  1009 ;;		Unchanged: 0/0
  1010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1015 ;;Total ram usage:        0 bytes
  1016 ;; Hardware stack levels used:    1
  1017 ;; This function calls:
  1018 ;;		Nothing
  1019 ;; This function is called by:
  1020 ;;		_main
  1021 ;; This function uses a non-reentrant model
  1022 ;;
  1023                           
  1024                           	psect	text4
  1025  00FABA                     __ptext4:
  1026                           	opt stack 0
  1027  00FABA                     _config:
  1028                           	opt stack 30
  1029                           
  1030                           ;config.c: 6: TRISA=0X00;
  1031                           
  1032                           ;incstack = 0
  1033  00FABA  0E00               	movlw	0
  1034  00FABC  6E92               	movwf	3986,c	;volatile
  1035                           
  1036                           ;config.c: 7: TRISB=0X00;
  1037  00FABE  0E00               	movlw	0
  1038  00FAC0  6E93               	movwf	3987,c	;volatile
  1039                           
  1040                           ;config.c: 8: TRISC=0X00;
  1041  00FAC2  0E00               	movlw	0
  1042  00FAC4  6E94               	movwf	3988,c	;volatile
  1043                           
  1044                           ;config.c: 9: TRISD=0X00;
  1045  00FAC6  0E00               	movlw	0
  1046  00FAC8  6E95               	movwf	3989,c	;volatile
  1047                           
  1048                           ;config.c: 10: TRISE=0Xff;
  1049  00FACA  6896               	setf	3990,c	;volatile
  1050                           
  1051                           ;config.c: 12: PORTA=0X00;
  1052  00FACC  0E00               	movlw	0
  1053  00FACE  6E80               	movwf	3968,c	;volatile
  1054                           
  1055                           ;config.c: 13: PORTB=0X00;
  1056  00FAD0  0E00               	movlw	0
  1057  00FAD2  6E81               	movwf	3969,c	;volatile
  1058                           
  1059                           ;config.c: 14: PORTC=0X00;
  1060  00FAD4  0E00               	movlw	0
  1061  00FAD6  6E82               	movwf	3970,c	;volatile
  1062                           
  1063                           ;config.c: 15: PORTD=0X00;
  1064  00FAD8  0E00               	movlw	0
  1065  00FADA  6E83               	movwf	3971,c	;volatile
  1066                           
  1067                           ;config.c: 16: PORTE=0X00;
  1068  00FADC  0E00               	movlw	0
  1069  00FADE  6E84               	movwf	3972,c	;volatile
  1070                           
  1071                           ;config.c: 18: LATA=0X00;
  1072  00FAE0  0E00               	movlw	0
  1073  00FAE2  6E89               	movwf	3977,c	;volatile
  1074                           
  1075                           ;config.c: 19: LATB=0X00;
  1076  00FAE4  0E00               	movlw	0
  1077  00FAE6  6E8A               	movwf	3978,c	;volatile
  1078                           
  1079                           ;config.c: 20: LATC=0X00;
  1080  00FAE8  0E00               	movlw	0
  1081  00FAEA  6E8B               	movwf	3979,c	;volatile
  1082                           
  1083                           ;config.c: 21: LATD=0X00;
  1084  00FAEC  0E00               	movlw	0
  1085  00FAEE  6E8C               	movwf	3980,c	;volatile
  1086                           
  1087                           ;config.c: 22: LATE=0X00;
  1088  00FAF0  0E00               	movlw	0
  1089  00FAF2  6E8D               	movwf	3981,c	;volatile
  1090                           
  1091                           ;config.c: 24: ANSELA=0X00;
  1092  00FAF4  0E00               	movlw	0
  1093  00FAF6  010F               	movlb	15	; () banked
  1094  00FAF8  6F38               	movwf	56,b	;volatile
  1095                           
  1096                           ;config.c: 25: ANSELB=0X00;
  1097  00FAFA  0E00               	movlw	0
  1098  00FAFC  6F39               	movwf	57,b	;volatile
  1099                           
  1100                           ;config.c: 26: ANSELC=0X00;
  1101  00FAFE  0E00               	movlw	0
  1102  00FB00  6F3A               	movwf	58,b	;volatile
  1103                           
  1104                           ;config.c: 27: ANSELD=0X00;
  1105  00FB02  0E00               	movlw	0
  1106  00FB04  6F3B               	movwf	59,b	;volatile
  1107                           
  1108                           ;config.c: 28: ANSELE=0X00;
  1109  00FB06  0E00               	movlw	0
  1110  00FB08  6F3C               	movwf	60,b	;volatile
  1111                           
  1112                           ;config.c: 30: OSCCON=0b01110100;
  1113  00FB0A  0E74               	movlw	116
  1114  00FB0C  6ED3               	movwf	4051,c	;volatile
  1115                           
  1116                           ; BSR set to: 15
  1117                           ;config.c: 31: OSCTUNEbits.PLLEN=1;
  1118  00FB0E  8C9B               	bsf	3995,6,c	;volatile
  1119                           
  1120                           ; BSR set to: 15
  1121  00FB10  0012               	return		;funcret
  1122  00FB12                     __end_of_config:
  1123                           	opt stack 0
  1124                           tblptru	equ	0xFF8
  1125                           tblptrh	equ	0xFF7
  1126                           tblptrl	equ	0xFF6
  1127                           tablat	equ	0xFF5
  1128                           intcon	equ	0xFF2
  1129                           postinc0	equ	0xFEE
  1130                           wreg	equ	0xFE8
  1131                           status	equ	0xFD8
  1132                           
  1133 ;; *************** function _buck_boost *****************
  1134 ;; Defined at:
  1135 ;;		line 42 in file "pwm_con.c"
  1136 ;; Parameters:    Size  Location     Type
  1137 ;;  type            2   42[COMRAM] int 
  1138 ;;  dty             2   44[COMRAM] int 
  1139 ;; Auto vars:     Size  Location     Type
  1140 ;;		None
  1141 ;; Return value:  Size  Location     Type
  1142 ;;                  1    wreg      void 
  1143 ;; Registers used:
  1144 ;;		wreg, status,2, status,0, cstack
  1145 ;; Tracked objects:
  1146 ;;		On entry : 0/0
  1147 ;;		On exit  : 0/0
  1148 ;;		Unchanged: 0/0
  1149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1150 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1153 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1154 ;;Total ram usage:        4 bytes
  1155 ;; Hardware stack levels used:    1
  1156 ;; Hardware stack levels required when called:    2
  1157 ;; This function calls:
  1158 ;;		___awtoft
  1159 ;;		___ftmul
  1160 ;;		___fttol
  1161 ;; This function is called by:
  1162 ;;		_main
  1163 ;; This function uses a non-reentrant model
  1164 ;;
  1165                           
  1166                           	psect	text5
  1167  00FC36                     __ptext5:
  1168                           	opt stack 0
  1169  00FC36                     _buck_boost:
  1170                           	opt stack 28
  1171                           
  1172                           ;pwm_con.c: 44: if (type==1)
  1173                           
  1174                           ; BSR set to: 15
  1175                           ;incstack = 0
  1176  00FC36  042B               	decf	buck_boost@type,w,c
  1177  00FC38  102C               	iorwf	buck_boost@type+1,w,c
  1178  00FC3A  A4D8               	btfss	status,2,c
  1179  00FC3C  D030               	goto	l191
  1180                           
  1181                           ;pwm_con.c: 45: {
  1182                           ;pwm_con.c: 46: CCPR1L=0;
  1183  00FC3E  0E00               	movlw	0
  1184  00FC40  6EBE               	movwf	4030,c	;volatile
  1185                           
  1186                           ;pwm_con.c: 47: if(dty>100)
  1187  00FC42  BE2E               	btfsc	buck_boost@dty+1,7,c
  1188  00FC44  D00A               	goto	l192
  1189  00FC46  502E               	movf	buck_boost@dty+1,w,c
  1190  00FC48  E104               	bnz	u920
  1191  00FC4A  0E65               	movlw	101
  1192  00FC4C  5C2D               	subwf	buck_boost@dty,w,c
  1193  00FC4E  A0D8               	btfss	status,0,c
  1194  00FC50  D004               	goto	l192
  1195  00FC52                     u920:
  1196                           
  1197                           ;pwm_con.c: 48: {
  1198                           ;pwm_con.c: 49: dty=100;
  1199  00FC52  0E00               	movlw	0
  1200  00FC54  6E2E               	movwf	buck_boost@dty+1,c
  1201  00FC56  0E64               	movlw	100
  1202  00FC58  6E2D               	movwf	buck_boost@dty,c
  1203  00FC5A                     l192:
  1204                           
  1205                           ;pwm_con.c: 50: }
  1206                           ;pwm_con.c: 52: c=dty*1.7;
  1207  00FC5A  0E9A               	movlw	154
  1208  00FC5C  6E10               	movwf	___ftmul@f2,c
  1209  00FC5E  0ED9               	movlw	217
  1210  00FC60  6E11               	movwf	___ftmul@f2+1,c
  1211  00FC62  0E3F               	movlw	63
  1212  00FC64  6E12               	movwf	___ftmul@f2+2,c
  1213  00FC66  C02D  F009         	movff	buck_boost@dty,___awtoft@c
  1214  00FC6A  C02E  F00A         	movff	buck_boost@dty+1,___awtoft@c+1
  1215  00FC6E  EC24  F07D         	call	___awtoft	;wreg free
  1216  00FC72  C009  F00D         	movff	?___awtoft,___ftmul@f1
  1217  00FC76  C00A  F00E         	movff	?___awtoft+1,___ftmul@f1+1
  1218  00FC7A  C00B  F00F         	movff	?___awtoft+2,___ftmul@f1+2
  1219  00FC7E  EC84  F07E         	call	___ftmul	;wreg free
  1220  00FC82  C00D  F01C         	movff	?___ftmul,___fttol@f1
  1221  00FC86  C00E  F01D         	movff	?___ftmul+1,___fttol@f1+1
  1222  00FC8A  C00F  F01E         	movff	?___ftmul+2,___fttol@f1+2
  1223  00FC8E  ECFE  F07E         	call	___fttol	;wreg free
  1224  00FC92  C01C  F058         	movff	?___fttol,_c
  1225  00FC96  C01D  F059         	movff	?___fttol+1,_c+1
  1226                           
  1227                           ;pwm_con.c: 53: CCPR2L=c;
  1228  00FC9A  C058  FF67         	movff	_c,3943	;volatile
  1229  00FC9E                     l191:
  1230                           
  1231                           ;pwm_con.c: 55: }
  1232                           ;pwm_con.c: 57: if (type==2)
  1233  00FC9E  0E02               	movlw	2
  1234  00FCA0  182B               	xorwf	buck_boost@type,w,c
  1235  00FCA2  102C               	iorwf	buck_boost@type+1,w,c
  1236  00FCA4  A4D8               	btfss	status,2,c
  1237  00FCA6  0012               	return	
  1238                           
  1239                           ;pwm_con.c: 58: {
  1240                           ;pwm_con.c: 59: CCPR2L=0b11111111;
  1241  00FCA8  6867               	setf	3943,c	;volatile
  1242                           
  1243                           ;pwm_con.c: 60: if(dty>100)
  1244  00FCAA  BE2E               	btfsc	buck_boost@dty+1,7,c
  1245  00FCAC  D00A               	goto	l194
  1246  00FCAE  502E               	movf	buck_boost@dty+1,w,c
  1247  00FCB0  E104               	bnz	u940
  1248  00FCB2  0E65               	movlw	101
  1249  00FCB4  5C2D               	subwf	buck_boost@dty,w,c
  1250  00FCB6  A0D8               	btfss	status,0,c
  1251  00FCB8  D004               	goto	l194
  1252  00FCBA                     u940:
  1253                           
  1254                           ;pwm_con.c: 61: {
  1255                           ;pwm_con.c: 62: dty=100;
  1256  00FCBA  0E00               	movlw	0
  1257  00FCBC  6E2E               	movwf	buck_boost@dty+1,c
  1258  00FCBE  0E64               	movlw	100
  1259  00FCC0  6E2D               	movwf	buck_boost@dty,c
  1260  00FCC2                     l194:
  1261                           
  1262                           ;pwm_con.c: 63: }
  1263                           ;pwm_con.c: 65: c=dty*1.7;
  1264  00FCC2  0E9A               	movlw	154
  1265  00FCC4  6E10               	movwf	___ftmul@f2,c
  1266  00FCC6  0ED9               	movlw	217
  1267  00FCC8  6E11               	movwf	___ftmul@f2+1,c
  1268  00FCCA  0E3F               	movlw	63
  1269  00FCCC  6E12               	movwf	___ftmul@f2+2,c
  1270  00FCCE  C02D  F009         	movff	buck_boost@dty,___awtoft@c
  1271  00FCD2  C02E  F00A         	movff	buck_boost@dty+1,___awtoft@c+1
  1272  00FCD6  EC24  F07D         	call	___awtoft	;wreg free
  1273  00FCDA  C009  F00D         	movff	?___awtoft,___ftmul@f1
  1274  00FCDE  C00A  F00E         	movff	?___awtoft+1,___ftmul@f1+1
  1275  00FCE2  C00B  F00F         	movff	?___awtoft+2,___ftmul@f1+2
  1276  00FCE6  EC84  F07E         	call	___ftmul	;wreg free
  1277  00FCEA  C00D  F01C         	movff	?___ftmul,___fttol@f1
  1278  00FCEE  C00E  F01D         	movff	?___ftmul+1,___fttol@f1+1
  1279  00FCF2  C00F  F01E         	movff	?___ftmul+2,___fttol@f1+2
  1280  00FCF6  ECFE  F07E         	call	___fttol	;wreg free
  1281  00FCFA  C01C  F058         	movff	?___fttol,_c
  1282  00FCFE  C01D  F059         	movff	?___fttol+1,_c+1
  1283                           
  1284                           ;pwm_con.c: 66: CCPR1L=c;
  1285  00FD02  C058  FFBE         	movff	_c,4030	;volatile
  1286  00FD06  0012               	return	
  1287  00FD08                     __end_of_buck_boost:
  1288                           	opt stack 0
  1289                           tblptru	equ	0xFF8
  1290                           tblptrh	equ	0xFF7
  1291                           tblptrl	equ	0xFF6
  1292                           tablat	equ	0xFF5
  1293                           intcon	equ	0xFF2
  1294                           postinc0	equ	0xFEE
  1295                           wreg	equ	0xFE8
  1296                           status	equ	0xFD8
  1297                           
  1298 ;; *************** function ___fttol *****************
  1299 ;; Defined at:
  1300 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\fttol.c"
  1301 ;; Parameters:    Size  Location     Type
  1302 ;;  f1              3   27[COMRAM] float 
  1303 ;; Auto vars:     Size  Location     Type
  1304 ;;  lval            4   37[COMRAM] unsigned long 
  1305 ;;  exp1            1   41[COMRAM] unsigned char 
  1306 ;;  sign1           1   36[COMRAM] unsigned char 
  1307 ;; Return value:  Size  Location     Type
  1308 ;;                  4   27[COMRAM] long 
  1309 ;; Registers used:
  1310 ;;		wreg, status,2, status,0
  1311 ;; Tracked objects:
  1312 ;;		On entry : 0/0
  1313 ;;		On exit  : 0/0
  1314 ;;		Unchanged: 0/0
  1315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1316 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1317 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1318 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1319 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1320 ;;Total ram usage:       15 bytes
  1321 ;; Hardware stack levels used:    1
  1322 ;; This function calls:
  1323 ;;		Nothing
  1324 ;; This function is called by:
  1325 ;;		_main
  1326 ;;		_buck_boost
  1327 ;; This function uses a non-reentrant model
  1328 ;;
  1329                           
  1330                           	psect	text6
  1331  00FDFC                     __ptext6:
  1332                           	opt stack 0
  1333  00FDFC                     ___fttol:
  1334                           	opt stack 29
  1335                           
  1336                           ;incstack = 0
  1337  00FDFC  C01E  F020         	movff	___fttol@f1+2,??___fttol
  1338  00FE00  6A21               	clrf	(??___fttol+1)& (0+255),c
  1339  00FE02  6A22               	clrf	(??___fttol+2)& (0+255),c
  1340  00FE04  341D               	rlcf	___fttol@f1+1,w,c
  1341  00FE06  3620               	rlcf	??___fttol& (0+255),f,c
  1342  00FE08  E301               	bnc	u831
  1343  00FE0A  8021               	bsf	(??___fttol+1)& (0+255),0,c
  1344  00FE0C                     u831:
  1345  00FE0C  5020               	movf	??___fttol,w,c
  1346  00FE0E  6E2A               	movwf	___fttol@exp1,c
  1347  00FE10  502A               	movf	___fttol@exp1,w,c
  1348  00FE12  A4D8               	btfss	status,2,c
  1349  00FE14  D009               	goto	l704
  1350  00FE16  0E00               	movlw	0
  1351  00FE18  6E1C               	movwf	?___fttol,c
  1352  00FE1A  0E00               	movlw	0
  1353  00FE1C  6E1D               	movwf	?___fttol+1,c
  1354  00FE1E  0E00               	movlw	0
  1355  00FE20  6E1E               	movwf	?___fttol+2,c
  1356  00FE22  0E00               	movlw	0
  1357  00FE24  6E1F               	movwf	?___fttol+3,c
  1358  00FE26  0012               	return	
  1359  00FE28                     l704:
  1360  00FE28  0E17               	movlw	23
  1361  00FE2A  6E20               	movwf	??___fttol& (0+255),c
  1362  00FE2C  C01C  F021         	movff	___fttol@f1,??___fttol+1
  1363  00FE30  C01D  F022         	movff	___fttol@f1+1,??___fttol+2
  1364  00FE34  C01E  F023         	movff	___fttol@f1+2,??___fttol+3
  1365  00FE38  2820               	incf	??___fttol,w,c
  1366  00FE3A  6E24               	movwf	(??___fttol+4)& (0+255),c
  1367  00FE3C  D004               	goto	u850
  1368  00FE3E                     u855:
  1369  00FE3E  90D8               	bcf	status,0,c
  1370  00FE40  3223               	rrcf	??___fttol+3,f,c
  1371  00FE42  3222               	rrcf	??___fttol+2,f,c
  1372  00FE44  3221               	rrcf	??___fttol+1,f,c
  1373  00FE46                     u850:
  1374  00FE46  2E24               	decfsz	(??___fttol+4)& (0+255),f,c
  1375  00FE48  D7FA               	goto	u855
  1376  00FE4A  5021               	movf	??___fttol+1,w,c
  1377  00FE4C  6E25               	movwf	___fttol@sign1,c
  1378  00FE4E  8E1D               	bsf	___fttol@f1+1,7,c
  1379  00FE50  0EFF               	movlw	255
  1380  00FE52  161C               	andwf	___fttol@f1,f,c
  1381  00FE54  0EFF               	movlw	255
  1382  00FE56  161D               	andwf	___fttol@f1+1,f,c
  1383  00FE58  0E00               	movlw	0
  1384  00FE5A  161E               	andwf	___fttol@f1+2,f,c
  1385  00FE5C  501C               	movf	___fttol@f1,w,c
  1386  00FE5E  6E26               	movwf	___fttol@lval,c
  1387  00FE60  501D               	movf	___fttol@f1+1,w,c
  1388  00FE62  6E27               	movwf	___fttol@lval+1,c
  1389  00FE64  501E               	movf	___fttol@f1+2,w,c
  1390  00FE66  6E28               	movwf	___fttol@lval+2,c
  1391  00FE68  6A29               	clrf	___fttol@lval+3,c
  1392  00FE6A  0E8E               	movlw	142
  1393  00FE6C  5E2A               	subwf	___fttol@exp1,f,c
  1394  00FE6E  AE2A               	btfss	___fttol@exp1,7,c
  1395  00FE70  D016               	goto	l706
  1396  00FE72  502A               	movf	___fttol@exp1,w,c
  1397  00FE74  0A80               	xorlw	128
  1398  00FE76  0F8F               	addlw	143
  1399  00FE78  B0D8               	btfsc	status,0,c
  1400  00FE7A  D009               	goto	l707
  1401  00FE7C  0E00               	movlw	0
  1402  00FE7E  6E1C               	movwf	?___fttol,c
  1403  00FE80  0E00               	movlw	0
  1404  00FE82  6E1D               	movwf	?___fttol+1,c
  1405  00FE84  0E00               	movlw	0
  1406  00FE86  6E1E               	movwf	?___fttol+2,c
  1407  00FE88  0E00               	movlw	0
  1408  00FE8A  6E1F               	movwf	?___fttol+3,c
  1409  00FE8C  0012               	return	
  1410  00FE8E                     l707:
  1411  00FE8E  90D8               	bcf	status,0,c
  1412  00FE90  3229               	rrcf	___fttol@lval+3,f,c
  1413  00FE92  3228               	rrcf	___fttol@lval+2,f,c
  1414  00FE94  3227               	rrcf	___fttol@lval+1,f,c
  1415  00FE96  3226               	rrcf	___fttol@lval,f,c
  1416  00FE98  3E2A               	incfsz	___fttol@exp1,f,c
  1417  00FE9A  D7F9               	goto	l707
  1418  00FE9C  D015               	goto	u890
  1419  00FE9E                     l706:
  1420  00FE9E  0E17               	movlw	23
  1421  00FEA0  642A               	cpfsgt	___fttol@exp1,c
  1422  00FEA2  D00F               	goto	l712
  1423  00FEA4  0E00               	movlw	0
  1424  00FEA6  6E1C               	movwf	?___fttol,c
  1425  00FEA8  0E00               	movlw	0
  1426  00FEAA  6E1D               	movwf	?___fttol+1,c
  1427  00FEAC  0E00               	movlw	0
  1428  00FEAE  6E1E               	movwf	?___fttol+2,c
  1429  00FEB0  0E00               	movlw	0
  1430  00FEB2  6E1F               	movwf	?___fttol+3,c
  1431  00FEB4  0012               	return	
  1432  00FEB6  90D8               	bcf	status,0,c
  1433  00FEB8  3626               	rlcf	___fttol@lval,f,c
  1434  00FEBA  3627               	rlcf	___fttol@lval+1,f,c
  1435  00FEBC  3628               	rlcf	___fttol@lval+2,f,c
  1436  00FEBE  3629               	rlcf	___fttol@lval+3,f,c
  1437  00FEC0  062A               	decf	___fttol@exp1,f,c
  1438  00FEC2                     l712:
  1439  00FEC2  502A               	movf	___fttol@exp1,w,c
  1440  00FEC4  A4D8               	btfss	status,2,c
  1441  00FEC6  D7F7               	goto	l713
  1442  00FEC8                     u890:
  1443  00FEC8  5025               	movf	___fttol@sign1,w,c
  1444  00FECA  B4D8               	btfsc	status,2,c
  1445  00FECC  D008               	goto	l715
  1446  00FECE  1E29               	comf	___fttol@lval+3,f,c
  1447  00FED0  1E28               	comf	___fttol@lval+2,f,c
  1448  00FED2  1E27               	comf	___fttol@lval+1,f,c
  1449  00FED4  6C26               	negf	___fttol@lval,c
  1450  00FED6  0E00               	movlw	0
  1451  00FED8  2227               	addwfc	___fttol@lval+1,f,c
  1452  00FEDA  2228               	addwfc	___fttol@lval+2,f,c
  1453  00FEDC  2229               	addwfc	___fttol@lval+3,f,c
  1454  00FEDE                     l715:
  1455  00FEDE  C026  F01C         	movff	___fttol@lval,?___fttol
  1456  00FEE2  C027  F01D         	movff	___fttol@lval+1,?___fttol+1
  1457  00FEE6  C028  F01E         	movff	___fttol@lval+2,?___fttol+2
  1458  00FEEA  C029  F01F         	movff	___fttol@lval+3,?___fttol+3
  1459  00FEEE  0012               	return	
  1460  00FEF0                     __end_of___fttol:
  1461                           	opt stack 0
  1462                           tblptru	equ	0xFF8
  1463                           tblptrh	equ	0xFF7
  1464                           tblptrl	equ	0xFF6
  1465                           tablat	equ	0xFF5
  1466                           intcon	equ	0xFF2
  1467                           postinc0	equ	0xFEE
  1468                           wreg	equ	0xFE8
  1469                           status	equ	0xFD8
  1470                           
  1471 ;; *************** function ___ftmul *****************
  1472 ;; Defined at:
  1473 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftmul.c"
  1474 ;; Parameters:    Size  Location     Type
  1475 ;;  f1              3   12[COMRAM] float 
  1476 ;;  f2              3   15[COMRAM] float 
  1477 ;; Auto vars:     Size  Location     Type
  1478 ;;  f3_as_produc    3   22[COMRAM] unsigned um
  1479 ;;  sign            1   26[COMRAM] unsigned char 
  1480 ;;  cntr            1   25[COMRAM] unsigned char 
  1481 ;;  exp             1   21[COMRAM] unsigned char 
  1482 ;; Return value:  Size  Location     Type
  1483 ;;                  3   12[COMRAM] float 
  1484 ;; Registers used:
  1485 ;;		wreg, status,2, status,0, cstack
  1486 ;; Tracked objects:
  1487 ;;		On entry : 0/0
  1488 ;;		On exit  : 0/0
  1489 ;;		Unchanged: 0/0
  1490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1491 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1492 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1493 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1494 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1495 ;;Total ram usage:       15 bytes
  1496 ;; Hardware stack levels used:    1
  1497 ;; Hardware stack levels required when called:    1
  1498 ;; This function calls:
  1499 ;;		___ftpack
  1500 ;; This function is called by:
  1501 ;;		_main
  1502 ;;		_buck_boost
  1503 ;; This function uses a non-reentrant model
  1504 ;;
  1505                           
  1506                           	psect	text7
  1507  00FD08                     __ptext7:
  1508                           	opt stack 0
  1509  00FD08                     ___ftmul:
  1510                           	opt stack 28
  1511                           
  1512                           ;incstack = 0
  1513  00FD08  C00F  F013         	movff	___ftmul@f1+2,??___ftmul
  1514  00FD0C  6A14               	clrf	(??___ftmul+1)& (0+255),c
  1515  00FD0E  6A15               	clrf	(??___ftmul+2)& (0+255),c
  1516  00FD10  340E               	rlcf	___ftmul@f1+1,w,c
  1517  00FD12  3613               	rlcf	??___ftmul& (0+255),f,c
  1518  00FD14  E301               	bnc	u761
  1519  00FD16  8014               	bsf	(??___ftmul+1)& (0+255),0,c
  1520  00FD18                     u761:
  1521  00FD18  5013               	movf	??___ftmul,w,c
  1522  00FD1A  6E16               	movwf	___ftmul@exp,c
  1523  00FD1C  5016               	movf	___ftmul@exp,w,c
  1524  00FD1E  A4D8               	btfss	status,2,c
  1525  00FD20  D007               	goto	l683
  1526  00FD22  0E00               	movlw	0
  1527  00FD24  6E0D               	movwf	?___ftmul,c
  1528  00FD26  0E00               	movlw	0
  1529  00FD28  6E0E               	movwf	?___ftmul+1,c
  1530  00FD2A  0E00               	movlw	0
  1531  00FD2C  6E0F               	movwf	?___ftmul+2,c
  1532  00FD2E  0012               	return	
  1533  00FD30                     l683:
  1534  00FD30  C012  F013         	movff	___ftmul@f2+2,??___ftmul
  1535  00FD34  6A14               	clrf	(??___ftmul+1)& (0+255),c
  1536  00FD36  6A15               	clrf	(??___ftmul+2)& (0+255),c
  1537  00FD38  3411               	rlcf	___ftmul@f2+1,w,c
  1538  00FD3A  3613               	rlcf	??___ftmul& (0+255),f,c
  1539  00FD3C  E301               	bnc	u781
  1540  00FD3E  8014               	bsf	(??___ftmul+1)& (0+255),0,c
  1541  00FD40                     u781:
  1542  00FD40  5013               	movf	??___ftmul,w,c
  1543  00FD42  6E1B               	movwf	___ftmul@sign,c
  1544  00FD44  501B               	movf	___ftmul@sign,w,c
  1545  00FD46  A4D8               	btfss	status,2,c
  1546  00FD48  D007               	goto	l685
  1547  00FD4A  0E00               	movlw	0
  1548  00FD4C  6E0D               	movwf	?___ftmul,c
  1549  00FD4E  0E00               	movlw	0
  1550  00FD50  6E0E               	movwf	?___ftmul+1,c
  1551  00FD52  0E00               	movlw	0
  1552  00FD54  6E0F               	movwf	?___ftmul+2,c
  1553  00FD56  0012               	return	
  1554  00FD58                     l685:
  1555  00FD58  501B               	movf	___ftmul@sign,w,c
  1556  00FD5A  0F7B               	addlw	123
  1557  00FD5C  2616               	addwf	___ftmul@exp,f,c
  1558  00FD5E  C00F  F01B         	movff	___ftmul@f1+2,___ftmul@sign
  1559  00FD62  5012               	movf	___ftmul@f2+2,w,c
  1560  00FD64  1A1B               	xorwf	___ftmul@sign,f,c
  1561  00FD66  0E80               	movlw	128
  1562  00FD68  161B               	andwf	___ftmul@sign,f,c
  1563  00FD6A  8E0E               	bsf	___ftmul@f1+1,7,c
  1564  00FD6C  8E11               	bsf	___ftmul@f2+1,7,c
  1565  00FD6E  0EFF               	movlw	255
  1566  00FD70  1610               	andwf	___ftmul@f2,f,c
  1567  00FD72  0EFF               	movlw	255
  1568  00FD74  1611               	andwf	___ftmul@f2+1,f,c
  1569  00FD76  0E00               	movlw	0
  1570  00FD78  1612               	andwf	___ftmul@f2+2,f,c
  1571  00FD7A  0E00               	movlw	0
  1572  00FD7C  6E17               	movwf	___ftmul@f3_as_product,c
  1573  00FD7E  0E00               	movlw	0
  1574  00FD80  6E18               	movwf	___ftmul@f3_as_product+1,c
  1575  00FD82  0E00               	movlw	0
  1576  00FD84  6E19               	movwf	___ftmul@f3_as_product+2,c
  1577  00FD86  0E07               	movlw	7
  1578  00FD88  6E1A               	movwf	___ftmul@cntr,c
  1579  00FD8A  A00D               	btfss	___ftmul@f1,0,c
  1580  00FD8C  D006               	goto	l687
  1581  00FD8E  5010               	movf	___ftmul@f2,w,c
  1582  00FD90  2617               	addwf	___ftmul@f3_as_product,f,c
  1583  00FD92  5011               	movf	___ftmul@f2+1,w,c
  1584  00FD94  2218               	addwfc	___ftmul@f3_as_product+1,f,c
  1585  00FD96  5012               	movf	___ftmul@f2+2,w,c
  1586  00FD98  2219               	addwfc	___ftmul@f3_as_product+2,f,c
  1587  00FD9A                     l687:
  1588  00FD9A  90D8               	bcf	status,0,c
  1589  00FD9C  320F               	rrcf	___ftmul@f1+2,f,c
  1590  00FD9E  320E               	rrcf	___ftmul@f1+1,f,c
  1591  00FDA0  320D               	rrcf	___ftmul@f1,f,c
  1592  00FDA2  90D8               	bcf	status,0,c
  1593  00FDA4  3610               	rlcf	___ftmul@f2,f,c
  1594  00FDA6  3611               	rlcf	___ftmul@f2+1,f,c
  1595  00FDA8  3612               	rlcf	___ftmul@f2+2,f,c
  1596  00FDAA  2E1A               	decfsz	___ftmul@cntr,f,c
  1597  00FDAC  D7EE               	goto	l686
  1598  00FDAE  0E09               	movlw	9
  1599  00FDB0  6E1A               	movwf	___ftmul@cntr,c
  1600  00FDB2  A00D               	btfss	___ftmul@f1,0,c
  1601  00FDB4  D006               	goto	l690
  1602  00FDB6  5010               	movf	___ftmul@f2,w,c
  1603  00FDB8  2617               	addwf	___ftmul@f3_as_product,f,c
  1604  00FDBA  5011               	movf	___ftmul@f2+1,w,c
  1605  00FDBC  2218               	addwfc	___ftmul@f3_as_product+1,f,c
  1606  00FDBE  5012               	movf	___ftmul@f2+2,w,c
  1607  00FDC0  2219               	addwfc	___ftmul@f3_as_product+2,f,c
  1608  00FDC2                     l690:
  1609  00FDC2  90D8               	bcf	status,0,c
  1610  00FDC4  320F               	rrcf	___ftmul@f1+2,f,c
  1611  00FDC6  320E               	rrcf	___ftmul@f1+1,f,c
  1612  00FDC8  320D               	rrcf	___ftmul@f1,f,c
  1613  00FDCA  90D8               	bcf	status,0,c
  1614  00FDCC  3219               	rrcf	___ftmul@f3_as_product+2,f,c
  1615  00FDCE  3218               	rrcf	___ftmul@f3_as_product+1,f,c
  1616  00FDD0  3217               	rrcf	___ftmul@f3_as_product,f,c
  1617  00FDD2  2E1A               	decfsz	___ftmul@cntr,f,c
  1618  00FDD4  D7EE               	goto	l689
  1619  00FDD6  C017  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  1620  00FDDA  C018  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  1621  00FDDE  C019  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  1622  00FDE2  C016  F004         	movff	___ftmul@exp,___ftpack@exp
  1623  00FDE6  C01B  F005         	movff	___ftmul@sign,___ftpack@sign
  1624  00FDEA  ECC4  F07D         	call	___ftpack	;wreg free
  1625  00FDEE  C001  F00D         	movff	?___ftpack,?___ftmul
  1626  00FDF2  C002  F00E         	movff	?___ftpack+1,?___ftmul+1
  1627  00FDF6  C003  F00F         	movff	?___ftpack+2,?___ftmul+2
  1628  00FDFA  0012               	return	
  1629  00FDFC                     __end_of___ftmul:
  1630                           	opt stack 0
  1631                           tblptru	equ	0xFF8
  1632                           tblptrh	equ	0xFF7
  1633                           tblptrl	equ	0xFF6
  1634                           tablat	equ	0xFF5
  1635                           intcon	equ	0xFF2
  1636                           postinc0	equ	0xFEE
  1637                           wreg	equ	0xFE8
  1638                           status	equ	0xFD8
  1639                           
  1640 ;; *************** function ___awtoft *****************
  1641 ;; Defined at:
  1642 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\awtoft.c"
  1643 ;; Parameters:    Size  Location     Type
  1644 ;;  c               2    8[COMRAM] int 
  1645 ;; Auto vars:     Size  Location     Type
  1646 ;;  sign            1   11[COMRAM] unsigned char 
  1647 ;; Return value:  Size  Location     Type
  1648 ;;                  3    8[COMRAM] float 
  1649 ;; Registers used:
  1650 ;;		wreg, status,2, status,0, cstack
  1651 ;; Tracked objects:
  1652 ;;		On entry : 0/0
  1653 ;;		On exit  : 0/0
  1654 ;;		Unchanged: 0/0
  1655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1656 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1657 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1659 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1660 ;;Total ram usage:        4 bytes
  1661 ;; Hardware stack levels used:    1
  1662 ;; Hardware stack levels required when called:    1
  1663 ;; This function calls:
  1664 ;;		___ftpack
  1665 ;; This function is called by:
  1666 ;;		_main
  1667 ;;		_buck_boost
  1668 ;; This function uses a non-reentrant model
  1669 ;;
  1670                           
  1671                           	psect	text8
  1672  00FA48                     __ptext8:
  1673                           	opt stack 0
  1674  00FA48                     ___awtoft:
  1675                           	opt stack 28
  1676                           
  1677                           ;incstack = 0
  1678  00FA48  0E00               	movlw	0
  1679  00FA4A  6E0C               	movwf	___awtoft@sign,c
  1680  00FA4C  AE0A               	btfss	___awtoft@c+1,7,c
  1681  00FA4E  D006               	goto	l585
  1682  00FA50  6C09               	negf	___awtoft@c,c
  1683  00FA52  1E0A               	comf	___awtoft@c+1,f,c
  1684  00FA54  B0D8               	btfsc	status,0,c
  1685  00FA56  2A0A               	incf	___awtoft@c+1,f,c
  1686  00FA58  0E01               	movlw	1
  1687  00FA5A  6E0C               	movwf	___awtoft@sign,c
  1688  00FA5C                     l585:
  1689  00FA5C  C009  F001         	movff	___awtoft@c,___ftpack@arg
  1690  00FA60  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  1691  00FA64  6A03               	clrf	___ftpack@arg+2,c
  1692  00FA66  0E8E               	movlw	142
  1693  00FA68  6E04               	movwf	___ftpack@exp,c
  1694  00FA6A  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  1695  00FA6E  ECC4  F07D         	call	___ftpack	;wreg free
  1696  00FA72  C001  F009         	movff	?___ftpack,?___awtoft
  1697  00FA76  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  1698  00FA7A  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  1699  00FA7E  0012               	return	
  1700  00FA80                     __end_of___awtoft:
  1701                           	opt stack 0
  1702                           tblptru	equ	0xFF8
  1703                           tblptrh	equ	0xFF7
  1704                           tblptrl	equ	0xFF6
  1705                           tablat	equ	0xFF5
  1706                           intcon	equ	0xFF2
  1707                           postinc0	equ	0xFEE
  1708                           wreg	equ	0xFE8
  1709                           status	equ	0xFD8
  1710                           
  1711 ;; *************** function ___ftpack *****************
  1712 ;; Defined at:
  1713 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\float.c"
  1714 ;; Parameters:    Size  Location     Type
  1715 ;;  arg             3    0[COMRAM] unsigned um
  1716 ;;  exp             1    3[COMRAM] unsigned char 
  1717 ;;  sign            1    4[COMRAM] unsigned char 
  1718 ;; Auto vars:     Size  Location     Type
  1719 ;;		None
  1720 ;; Return value:  Size  Location     Type
  1721 ;;                  3    0[COMRAM] float 
  1722 ;; Registers used:
  1723 ;;		wreg, status,2, status,0
  1724 ;; Tracked objects:
  1725 ;;		On entry : 0/0
  1726 ;;		On exit  : 0/0
  1727 ;;		Unchanged: 0/0
  1728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1729 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1731 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1732 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1733 ;;Total ram usage:        8 bytes
  1734 ;; Hardware stack levels used:    1
  1735 ;; This function calls:
  1736 ;;		Nothing
  1737 ;; This function is called by:
  1738 ;;		___awtoft
  1739 ;;		___ftmul
  1740 ;; This function uses a non-reentrant model
  1741 ;;
  1742                           
  1743                           	psect	text9
  1744  00FB88                     __ptext9:
  1745                           	opt stack 0
  1746  00FB88                     ___ftpack:
  1747                           	opt stack 28
  1748                           
  1749                           ;incstack = 0
  1750  00FB88  5004               	movf	___ftpack@exp,w,c
  1751  00FB8A  B4D8               	btfsc	status,2,c
  1752  00FB8C  D005               	goto	u690
  1753  00FB8E  5001               	movf	___ftpack@arg,w,c
  1754  00FB90  1002               	iorwf	___ftpack@arg+1,w,c
  1755  00FB92  1003               	iorwf	___ftpack@arg+2,w,c
  1756  00FB94  A4D8               	btfss	status,2,c
  1757  00FB96  D00C               	goto	l604
  1758  00FB98                     u690:
  1759  00FB98  0E00               	movlw	0
  1760  00FB9A  6E01               	movwf	?___ftpack,c
  1761  00FB9C  0E00               	movlw	0
  1762  00FB9E  6E02               	movwf	?___ftpack+1,c
  1763  00FBA0  0E00               	movlw	0
  1764  00FBA2  6E03               	movwf	?___ftpack+2,c
  1765  00FBA4  0012               	return	
  1766  00FBA6  2A04               	incf	___ftpack@exp,f,c
  1767  00FBA8  90D8               	bcf	status,0,c
  1768  00FBAA  3203               	rrcf	___ftpack@arg+2,f,c
  1769  00FBAC  3202               	rrcf	___ftpack@arg+1,f,c
  1770  00FBAE  3201               	rrcf	___ftpack@arg,f,c
  1771  00FBB0                     l604:
  1772  00FBB0  0E00               	movlw	0
  1773  00FBB2  1401               	andwf	___ftpack@arg,w,c
  1774  00FBB4  6E06               	movwf	??___ftpack& (0+255),c
  1775  00FBB6  0E00               	movlw	0
  1776  00FBB8  1402               	andwf	___ftpack@arg+1,w,c
  1777  00FBBA  6E07               	movwf	(??___ftpack+1)& (0+255),c
  1778  00FBBC  0EFE               	movlw	254
  1779  00FBBE  1403               	andwf	___ftpack@arg+2,w,c
  1780  00FBC0  6E08               	movwf	(??___ftpack+2)& (0+255),c
  1781  00FBC2  5006               	movf	??___ftpack,w,c
  1782  00FBC4  1007               	iorwf	??___ftpack+1,w,c
  1783  00FBC6  1008               	iorwf	??___ftpack+2,w,c
  1784  00FBC8  B4D8               	btfsc	status,2,c
  1785  00FBCA  D00C               	goto	l607
  1786  00FBCC  D7EC               	goto	l605
  1787  00FBCE  2A04               	incf	___ftpack@exp,f,c
  1788  00FBD0  0E01               	movlw	1
  1789  00FBD2  2601               	addwf	___ftpack@arg,f,c
  1790  00FBD4  0E00               	movlw	0
  1791  00FBD6  2202               	addwfc	___ftpack@arg+1,f,c
  1792  00FBD8  0E00               	movlw	0
  1793  00FBDA  2203               	addwfc	___ftpack@arg+2,f,c
  1794  00FBDC  90D8               	bcf	status,0,c
  1795  00FBDE  3203               	rrcf	___ftpack@arg+2,f,c
  1796  00FBE0  3202               	rrcf	___ftpack@arg+1,f,c
  1797  00FBE2  3201               	rrcf	___ftpack@arg,f,c
  1798  00FBE4                     l607:
  1799  00FBE4  0E00               	movlw	0
  1800  00FBE6  1401               	andwf	___ftpack@arg,w,c
  1801  00FBE8  6E06               	movwf	??___ftpack& (0+255),c
  1802  00FBEA  0E00               	movlw	0
  1803  00FBEC  1402               	andwf	___ftpack@arg+1,w,c
  1804  00FBEE  6E07               	movwf	(??___ftpack+1)& (0+255),c
  1805  00FBF0  0EFF               	movlw	255
  1806  00FBF2  1403               	andwf	___ftpack@arg+2,w,c
  1807  00FBF4  6E08               	movwf	(??___ftpack+2)& (0+255),c
  1808  00FBF6  5006               	movf	??___ftpack,w,c
  1809  00FBF8  1007               	iorwf	??___ftpack+1,w,c
  1810  00FBFA  1008               	iorwf	??___ftpack+2,w,c
  1811  00FBFC  B4D8               	btfsc	status,2,c
  1812  00FBFE  D006               	goto	l610
  1813  00FC00  D7E6               	goto	l608
  1814  00FC02  0604               	decf	___ftpack@exp,f,c
  1815  00FC04  90D8               	bcf	status,0,c
  1816  00FC06  3601               	rlcf	___ftpack@arg,f,c
  1817  00FC08  3602               	rlcf	___ftpack@arg+1,f,c
  1818  00FC0A  3603               	rlcf	___ftpack@arg+2,f,c
  1819  00FC0C                     l610:
  1820  00FC0C  BE02               	btfsc	___ftpack@arg+1,7,c
  1821  00FC0E  D003               	goto	u730
  1822  00FC10  0E02               	movlw	2
  1823  00FC12  6004               	cpfslt	___ftpack@exp,c
  1824  00FC14  D7F6               	goto	l611
  1825  00FC16                     u730:
  1826  00FC16  A004               	btfss	___ftpack@exp,0,c
  1827  00FC18  9E02               	bcf	___ftpack@arg+1,7,c
  1828  00FC1A  90D8               	bcf	status,0,c
  1829  00FC1C  3204               	rrcf	___ftpack@exp,f,c
  1830  00FC1E  5004               	movf	___ftpack@exp,w,c
  1831  00FC20  1203               	iorwf	___ftpack@arg+2,f,c
  1832  00FC22  5005               	movf	___ftpack@sign,w,c
  1833  00FC24  A4D8               	btfss	status,2,c
  1834  00FC26  8E03               	bsf	___ftpack@arg+2,7,c
  1835  00FC28  C001  F001         	movff	___ftpack@arg,?___ftpack
  1836  00FC2C  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  1837  00FC30  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  1838  00FC34  0012               	return	
  1839  00FC36                     __end_of___ftpack:
  1840                           	opt stack 0
  1841                           tblptru	equ	0xFF8
  1842                           tblptrh	equ	0xFF7
  1843                           tblptrl	equ	0xFF6
  1844                           tablat	equ	0xFF5
  1845                           intcon	equ	0xFF2
  1846                           postinc0	equ	0xFEE
  1847                           wreg	equ	0xFE8
  1848                           status	equ	0xFD8
  1849                           
  1850 ;; *************** function _adc_config *****************
  1851 ;; Defined at:
  1852 ;;		line 59 in file "config.c"
  1853 ;; Parameters:    Size  Location     Type
  1854 ;;		None
  1855 ;; Auto vars:     Size  Location     Type
  1856 ;;		None
  1857 ;; Return value:  Size  Location     Type
  1858 ;;                  1    wreg      void 
  1859 ;; Registers used:
  1860 ;;		wreg, status,2
  1861 ;; Tracked objects:
  1862 ;;		On entry : 0/0
  1863 ;;		On exit  : 0/0
  1864 ;;		Unchanged: 0/0
  1865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1870 ;;Total ram usage:        0 bytes
  1871 ;; Hardware stack levels used:    1
  1872 ;; This function calls:
  1873 ;;		Nothing
  1874 ;; This function is called by:
  1875 ;;		_main
  1876 ;; This function uses a non-reentrant model
  1877 ;;
  1878                           
  1879                           	psect	text10
  1880  00FA06                     __ptext10:
  1881                           	opt stack 0
  1882  00FA06                     _adc_config:
  1883                           	opt stack 30
  1884                           
  1885                           ;incstack = 0
  1886  00FA06  8092               	bsf	3986,0,c	;volatile
  1887                           
  1888                           ;config.c: 61: ANSELAbits.ANSA0=1;
  1889  00FA08  010F               	movlb	15	; () banked
  1890  00FA0A  8138               	bsf	56,0,b	;volatile
  1891                           
  1892                           ;config.c: 62: TRISAbits.RA1=1;
  1893  00FA0C  8292               	bsf	3986,1,c	;volatile
  1894                           
  1895                           ;config.c: 63: ANSELAbits.ANSA1=1;
  1896  00FA0E  8338               	bsf	56,1,b	;volatile
  1897                           
  1898                           ; BSR set to: 15
  1899                           ;config.c: 66: ADCON0=0b00000011;
  1900  00FA10  0E03               	movlw	3
  1901  00FA12  6EC2               	movwf	4034,c	;volatile
  1902                           
  1903                           ;config.c: 67: ADCON1=0b10000000;
  1904  00FA14  0E80               	movlw	128
  1905  00FA16  6EC1               	movwf	4033,c	;volatile
  1906                           
  1907                           ;config.c: 68: ADCON2=0b00111110;
  1908  00FA18  0E3E               	movlw	62
  1909  00FA1A  6EC0               	movwf	4032,c	;volatile
  1910                           
  1911                           ; BSR set to: 15
  1912                           ;config.c: 69: ADCON2bits.ADFM=0;
  1913  00FA1C  9EC0               	bcf	4032,7,c	;volatile
  1914                           
  1915                           ; BSR set to: 15
  1916  00FA1E  0012               	return		;funcret
  1917  00FA20                     __end_of_adc_config:
  1918                           	opt stack 0
  1919  0000                     tblptru	equ	0xFF8
  1920                           tblptrh	equ	0xFF7
  1921                           tblptrl	equ	0xFF6
  1922                           tablat	equ	0xFF5
  1923                           intcon	equ	0xFF2
  1924                           postinc0	equ	0xFEE
  1925                           wreg	equ	0xFE8
  1926                           status	equ	0xFD8
  1927                           tblptru	equ	0xFF8
  1928                           tblptrh	equ	0xFF7
  1929                           tblptrl	equ	0xFF6
  1930                           tablat	equ	0xFF5
  1931                           intcon	equ	0xFF2
  1932                           postinc0	equ	0xFEE
  1933                           wreg	equ	0xFE8
  1934                           status	equ	0xFD8
  1935                           
  1936                           	psect	rparam
  1937  0000                     tblptru	equ	0xFF8
  1938                           tblptrh	equ	0xFF7
  1939                           tblptrl	equ	0xFF6
  1940                           tablat	equ	0xFF5
  1941                           intcon	equ	0xFF2
  1942                           postinc0	equ	0xFEE
  1943                           wreg	equ	0xFE8
  1944                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         138
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     55      95
    BANK0           160      0     102
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_buck_boost
    _eusart_config->_USARTInit
    _buck_boost->___fttol
    ___fttol->___ftmul
    ___ftmul->___awtoft
    ___awtoft->___ftpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                29    29      0   13876
                                             46 COMRAM     9     9      0
                           ___awtoft
                            ___ftmul
                            ___fttol
                         _adc_config
                         _buck_boost
                             _config
                      _eusart_config
                         _pwm_config
 ---------------------------------------------------------------------------------
 (1) _pwm_config                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _eusart_config                                        0     0      0      98
                          _USARTInit
 ---------------------------------------------------------------------------------
 (2) _USARTInit                                            4     2      2      98
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buck_boost                                           4     0      4    6997
                                             42 COMRAM     4     0      4
                           ___awtoft
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     480
                                             27 COMRAM    15    11      4
                           ___awtoft (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    3448
                                             12 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             4     1      3    2783
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2388
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _adc_config                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awtoft
     ___ftpack
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
   ___fttol
     ___awtoft (ARG)
       ___ftpack
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
   _adc_config
   _buck_boost
     ___awtoft
       ___ftpack
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
   _config
   _eusart_config
     _USARTInit
   _pwm_config

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      66       5       63.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     37      5F       1      100.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C5      12        0.0%
DATA                 0      0      C5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Thu Nov 22 17:03:58 2018

                      _a 005A                        _b 003C                        _c 0058  
                      _d 0056                       l63 FF44                       _nt 003E  
     USARTInit@baud_rate 0001             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000                      l240 FB74  
                    l241 FB1C                      l242 FB20                      l243 FB24  
                    l238 FB2A                      l191 FC9E                      l239 FB18  
                    l192 FC5A                      l610 FC0C                      l194 FCC2  
                    l611 FC02                      l604 FBB0                      l605 FBA6  
                    l607 FBE4                      l608 FBCE                      l712 FEC2  
                    l704 FE28                      l713 FEB6                      l706 FE9E  
                    l715 FEDE                      l707 FE8E                      l585 FA5C  
                    l690 FDC2                      l683 FD30                      l685 FD58  
                    l686 FD8A                      l687 FD9A                      l689 FDB2  
           __CFG_CPB$OFF 000000                      _PR2 000FBB             __CFG_CPD$OFF 000000  
                    u730 FC16                      u831 FE0C                      u920 FC52  
                    u761 FD18                      u690 FB98                      u850 FE46  
                    u940 FCBA                      u781 FD40                      u855 FE3E  
                    u890 FEC8                      _fac 0054                      _dir 004C  
                    _cnt 005E                      _dty 00C2                      _str 00A0  
                    wreg 000FE8               _TXSTA1bits 000FAC               _TXSTA2bits 000F72  
           __CFG_LVP$OFF 000000            buck_boost@dty 002D                     l2263 FB4E  
                   l2265 FB58                     l2267 FB62                     l2269 FB6C  
                   _LATA 000F89                     _LATB 000F8A                     _LATC 000F8B  
                   _LATD 000F8C                     u1417 FF4E                     _LATE 000F8D  
                   u1427 FF62                     _adcn 0038                     _adcp 003A  
                   _buck 00C0                     _main FEF0             ___ftpack@arg 0001  
                   _pasi 004E              main@rez_adc 0036             ___ftpack@exp 0004  
          __CFG_BORV$190 000000                     _type 00C4                     start 0000  
          __CFG_IESO$OFF 000000             ___ftmul@cntr 001A             ___param_bank 000000  
           ___ftmul@sign 001B             ___fttol@exp1 002A             ___fttol@lval 0026  
           _BAUDCON2bits 000F70           buck_boost@type 002B                    ?_main 0001  
        __end_of___ftmul FDFC          __end_of___fttol FEF0                    _T2CON 000FBA  
                  _RCREG 000FAE                    _PORTA 000F80                    _PORTB 000F81  
                  _PORTC 000F82                    _PORTD 000F83                    _PORTE 000F84  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISC 000F94  
                  _TRISD 000F95                    _TRISE 000F96                    _TXREG 000FAD  
                  _UQEnd 005C            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000            ___awtoft@sign 000C  
                  _boost 00BE       __CFG_MCLRE$EXTMCLR 000000            ___ftpack@sign 0005  
                  _start 0044           __CFG_BOREN$OFF 000000                    tablat 000FF5  
     __size_of_USARTInit 0076                    status 000FD8           __CFG_HFOFST$ON 000000  
         __CFG_PBADEN$ON 000000          __initialization FA80             __end_of_main 0000  
                 ??_main 002F            ___fttol@sign1 0025            __activetblptr 000002  
         __CFG_PLLCFG$ON 000000                   _ADCON0 000FC2                   _ADCON1 000FC1  
                 _ADCON2 000FC0                   _ADRESH 000FC4                   _CCPR1L 000FBE  
                 _CCPR2L 000F67                   _CCPR3L 000F5E         __end_of___awtoft FA80  
                 _ANSELA 000F38                   _ANSELB 000F39                   _ANSELC 000F3A  
                 _ANSELD 000F3B                   _ANSELE 000F3C         __end_of___ftpack FC36  
         __CFG_WDTEN$OFF 000000                   _OSCCON 000FD3                   _SPBRG1 000FAF  
                 _SPBRG2 000F75                   _TXREG2 000F73                   _URBuff 0060  
         __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000                ??___ftmul 0013  
              ??___fttol 0020                   _config FABA                   clear_0 FA9E  
                 clear_1 FAAA        __end_of_USARTInit FB88    ___ftmul@f3_as_product 0017  
           __pdataCOMRAM 005E                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization FAB0  
          ___rparam_used 000001               ___awtoft@c 0009               ___ftmul@f1 000D  
             ___ftmul@f2 0010               ___fttol@f1 001C           __pcstackCOMRAM 0001  
 __size_of_eusart_config 0018               _adc_config FA06               __pbssBANK0 0060  
             __pnvCOMRAM 005C       __CFG_CCP2MX$PORTC1 000000       __CFG_CCP3MX$PORTB5 000000  
                ?_config 0001                  _CCP1CON 000FBD                  _CCP2CON 000F66  
                _CCP3CON 000F5D                ?___awtoft 0009                ?___ftpack 0001  
             _directie_2 0048               _buck_boost FC36        __CFG_PRICLKEN$OFF 000000  
                _SPBRGH2 000F76            _eusart_config F9EE       USARTWriteInt@F7033 00B9  
                _UQFront 005D               _go_stepper 0046          __CFG_PWRTEN$OFF 000000  
                __Hparam 0000                  __Lparam 0000              ?_adc_config 0001  
                ___ftmul FD08                  ___fttol FDFC          __size_of_config 0058  
                __pcinit FA80               ??___awtoft 000C               ??___ftpack 0006  
                __ramtop 1000                  __ptext0 FEF0                  __ptext1 FA20  
                __ptext2 F9EE                  __ptext3 FB12                  __ptext4 FABA  
                __ptext5 FC36                  __ptext6 FDFC                  __ptext7 FD08  
                __ptext8 FA48                  __ptext9 FB88               _duty_boost 0052  
                _nr_pasi 004A           ?_eusart_config 0001                  main@dty 0034  
   end_of_initialization FAB0            __Lmediumconst 0000                  postinc0 000FEE  
              _PORTBbits 000F81              ?_buck_boost 002B                _USARTInit FB12  
              _TRISAbits 000F92                _TRISCbits 000F94                _TRISDbits 000F95  
             _pwm_config FA20      __size_of_adc_config 001A              ___ftmul@exp 0016  
          __pidataCOMRAM F9EC           __end_of_config FB12          ??_eusart_config 0005  
    start_initialization FA80               ?_USARTInit 0001      __size_of_buck_boost 00D2  
               ??_config 0001        __size_of___awtoft 0038        __size_of___ftpack 00AE  
            __pbssCOMRAM 0038              ?_pwm_config 0001             ??_adc_config 0001  
               ?___ftmul 000D                 ?___fttol 001C      USART2WriteInt@F7045 00B4  
            ??_USARTInit 0003                 _CCPTMRS0 000F49       __end_of_adc_config FA20  
              _duty_buck 0050                 _LATDbits 000F8C                 _PIE1bits 000F9D  
               _PIE3bits 000FA3                 _PIR1bits 000F9E                 _PIR3bits 000FA4  
       __CFG_WDTPS$32768 000000      __size_of_pwm_config 0028               _ADCON0bits 000FC2  
             _ADCON2bits 000FC0             ??_buck_boost 002F                main@numar 0031  
               __Hrparam 0000                 __Lrparam 0000       __end_of_buck_boost FD08  
      __CFG_P2BMX$PORTD2 000000         __size_of___ftmul 00F4         __size_of___fttol 00F4  
               ___awtoft FA48                 ___ftpack FB88               _ANSELAbits 000F38  
               __ptext10 FA06            __size_of_main 0110                 _pasi_int 0042  
               _sel_pasi 0040              _OSCTUNEbits 000F9B               _INTCONbits 000FF2  
           ??_pwm_config 0001    __end_of_eusart_config FA06               _RCSTA1bits 000FAB  
             _RCSTA2bits 000F71       __end_of_pwm_config FA48        __CFG_T3CMX$PORTC0 000000  
      __CFG_FOSC$INTIO67 000000  
